# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
  - stage: installation_and_testing
    jobs:
      - job: infracostazuredemo
        steps:
          - task: TerraformInstaller@0
            displayName: Install terraform
            inputs:
              terraformVersion: 'latest'
               
          - script: |
              curl -fsSL https://raw.githubusercontent.com/infracost/infracost/master/scripts/install.sh | sh
              tar xzf infracost-linux-amd64.tar.gz -C /tmp
              mv /tmp/infracost-linux-amd64 /usr/local/bin/infracost
              infracost --version
            displayName: Install Infracost

          - task: TerraformTaskV3@3
            displayName: terraform init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'Alpesh-Personal-Azure'
              backendAzureRmResourceGroupName: 'EIC-DevOps-RG'
              backendAzureRmStorageAccountName: tfstate
              backendAzureRmContainerName: tfstate
              backendAzureRmKey: tfstate
          - task: TerraformTaskV3@3
            displayName: terraform plan
            inputs:
              provider: 'azurerm'
              command: 'custom'
              customCommand: 'plan'
              outputTo: 'console'
              backendServiceArm: 'Alpesh-Personal-Azure'
              backendAzureRmResourceGroupName: 'EIC-DevOps-RG'
              backendAzureRmStorageAccountName: tfstate
              backendAzureRmContainerName: tfstate
              backendAzureRmKey: tfstate
              environmentServiceNameAzureRM: 'Alpesh-Personal-Azure'
           
          # - task: TerraformTaskV3@3
          #   inputs:
          #     provider: 'azurerm'
          #     command: 'apply'
          #     backendServiceArm: 'Alpesh-Personal-Azure'
          #     backendAzureRmResourceGroupName: 'EIC-DevOps-RG'
          #     backendAzureRmStorageAccountName: tfstate
          #     backendAzureRmContainerName: tfstate
          #     backendAzureRmKey: tfstate
          #     environmentServiceNameAzureRM: 'Alpesh-Personal-Azure'
            
          - script: |
              infracost breakdown --show-skipped --path=.
            displayName: Cost estimation 
            env:
               INFRACOST_API_KEY: $(INFRACOST_API_KEY)
          - task: TerraformTaskV3@3
            inputs:
              provider: 'azurerm'
              command: 'destroy'
              backendServiceArm: 'Alpesh-Personal-Azure'
              backendAzureRmResourceGroupName: 'EIC-DevOps-RG'
              backendAzureRmStorageAccountName: tfstate
              backendAzureRmContainerName: tfstate
              backendAzureRmKey: tfstate
              environmentServiceNameAzureRM: 'Alpesh-Personal-Azure'






